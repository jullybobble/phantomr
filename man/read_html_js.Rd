% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/phantom.R
\name{read_html_js}
\alias{read_html_js}
\title{Read javascript-generated HTML pages.}
\usage{
read_html_js(
  url,
  ...,
  .phantomjs = NULL,
  .phantom_session = NULL,
  .simplify = FALSE
)
}
\arguments{
\item{url}{[character vector] the url whose HTML to download and parse}

\item{...}{additional parameters passed to \code{\link[xml2]{read_html}}}

\item{.phantomjs}{a PhantomJS process as returned by \code{\link[webdriver]{run_phantomjs}()}}

\item{.phantom_session}{a \code{\link[webdriver]{Session}}, for exampled as returned by
\code{Session$new(port = run_phantomjs()$port)}}

\item{.simplify}{}
}
\value{
The resulting HTML document normalised to valid XML as by \code{\link[xml2]{read_html}}.
}
\description{
PhantomJS (a headless browser without UI) is used to let any embedded javascript
code generate any additional HTMl as in a browser, and the result is then passed
to \code{\link[xml2]{read_html}} for parsing, whose result is returned.
}
\details{
You'll need PhantomJS installed: see \href{http://phantomjs.org/}{PhantomJS} or
\href{https://github.com/rstudio/webdriver#phantomjs}{webdriver} web pages for
installation instructions.

Creating the PhantomJS process is the expensive part, so pass one as in the examples
below to save time.

For more complex interaction with the page, like entering text or executing additional
javascript code, use \href{https://github.com/rstudio/webdriver#phantomjs}{webdriver} directly.
}
\examples{

library(rvest)
library(webdriver)
library(glue)

url <- "https://food.list.co.uk/place/22191-brewhemia-edinburgh/"

html_nojs <- read_html(url)
html_nodes(html_nojs, "li:nth-child(5)")[[2]]

# note that no email address appear
# {xml_node}
# <li>
#   [1] <strong>Email</strong>
#   [2] <script>\nvar e='3E612F3C6B753B45327823266F633B453278232661696D6568776572623B30347823266F666E693E226B753B45327823266F633B45327823267473696C206E6F20676E697473696C2072756F792077617 ...

html_js <- read_html_js(url)
html_nodes(html_js, "li:nth-child(5)")[[2]]

# we now see the email address that was generated by the javascript code:
# {xml_node}
# <li>
# [1] <strong>Email</strong>
# [2] <script>\nvar e='3E612F3C6B753B45327823266F633B453278232661696D6568776572623B30347823266F666E693E226B753B45327823266F633B45327823267473696C206E6F20676E697473696C2072756F792077617 ...
# [3] <a href="mailto:info@brewhemia.co.uk?subject=I\%20saw\%20your\%20listing\%20on\%20list.co.uk">info@brewhemia.co.uk</a>

# Passing a PhantomJS process gives the same result, but is faster. This is
# particularly interesting if you have to call the function several times.
phantomjs <- run_phantomjs()

html_js <- read_html_js(url, .phantomjs = phantomjs)
html_nodes(html_js, "li:nth-child(5)")[[2]]

}
\seealso{
xml2 read_html

\url{https://github.com/rstudio/webdriver}
}
